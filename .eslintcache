[{"D:\\Projects\\code\\attendanceSystem\\src\\index.tsx":"1","D:\\Projects\\code\\attendanceSystem\\src\\reportWebVitals.ts":"2","D:\\Projects\\code\\attendanceSystem\\src\\App.tsx":"3","D:\\Projects\\code\\attendanceSystem\\src\\pages\\authenticationPage\\AuthenticationPage.tsx":"4","D:\\Projects\\code\\attendanceSystem\\src\\components\\forms\\loginForm\\LoginForm.tsx":"5","D:\\Projects\\code\\attendanceSystem\\src\\contexts\\AuthContext.ts":"6","D:\\Projects\\code\\attendanceSystem\\src\\pages\\mainPage\\MainPage.tsx":"7","D:\\Projects\\code\\attendanceSystem\\src\\components\\forms\\authForm\\AuthForm.tsx":"8","D:\\Projects\\code\\attendanceSystem\\src\\pages\\detailsPage\\DetailsPage.tsx":"9"},{"size":542,"mtime":1607429374336,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":5543,"mtime":1607429808521,"results":"13","hashOfConfig":"11"},{"size":782,"mtime":1607431767420,"results":"14","hashOfConfig":"11"},{"size":487,"mtime":1607317353356,"results":"15","hashOfConfig":"11"},{"size":615,"mtime":1607411409285,"results":"16","hashOfConfig":"11"},{"size":3463,"mtime":1607428595904,"results":"17","hashOfConfig":"11"},{"size":3016,"mtime":1607432530620,"results":"18","hashOfConfig":"11"},{"size":4138,"mtime":1607424990174,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16rfo4g",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Projects\\code\\attendanceSystem\\src\\index.tsx",[],"D:\\Projects\\code\\attendanceSystem\\src\\reportWebVitals.ts",[],["41","42"],"D:\\Projects\\code\\attendanceSystem\\src\\App.tsx",[],"D:\\Projects\\code\\attendanceSystem\\src\\pages\\authenticationPage\\AuthenticationPage.tsx",[],"D:\\Projects\\code\\attendanceSystem\\src\\components\\forms\\loginForm\\LoginForm.tsx",[],["43","44"],"D:\\Projects\\code\\attendanceSystem\\src\\contexts\\AuthContext.ts",[],"D:\\Projects\\code\\attendanceSystem\\src\\pages\\mainPage\\MainPage.tsx",["45"],"import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"contexts/AuthContext\";\r\nimport { EntranceShape, WeekDays } from \"App\";\r\nimport moment from \"moment\";\r\nexport enum WorkTypes {\r\n  All = \"All\",\r\n  InOffice = \"In Office\",\r\n  Remote = \"Remote\",\r\n}\r\n\r\nconst MainPage = ({\r\n  SubmitEntrance,\r\n  SubmitExit,\r\n}: {\r\n  SubmitEntrance: ({ workType }: { workType: WorkTypes }) => void;\r\n  SubmitExit: ({ workDescription }: { workDescription: string }) => void;\r\n}) => {\r\n  //context\r\n  const { isAuthenticated, currentUser } = useContext(AuthContext);\r\n  //state\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [workType, setWorkType] = useState<WorkTypes>(WorkTypes.InOffice);\r\n  const [workDescription, setWorkDescription] = useState<string>(\"\");\r\n  //callbacks\r\n  const onSelectChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setWorkType(value);\r\n  }, []);\r\n  const onTextareaChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setWorkDescription(value);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (\r\n      new Date().getDay() === WeekDays.Thursday ||\r\n      new Date().getDay() === WeekDays.Friday\r\n    ) {\r\n      setError(\"ثبت ورود و خروج در روز های تعطیل امکان پذیر نیست\");\r\n    }\r\n  }, []);\r\n  return isAuthenticated ? (\r\n    error.length > 0 ? (\r\n      <h3>{error}</h3>\r\n    ) : (\r\n      <div>\r\n        {currentUser.activityLog.length > 0 &&\r\n        currentUser.activityLog[currentUser.activityLog.length - 1]\r\n          .hasEntered &&\r\n        currentUser.activityLog[currentUser.activityLog.length - 1].exitTime ===\r\n          null ? (\r\n          <>\r\n            <h3>\r\n              ورود در :\r\n              {moment(\r\n                currentUser.activityLog[currentUser.activityLog.length - 1]\r\n                  .entranceTime\r\n              ).format(\"h:mm:ss a\")}\r\n            </h3>\r\n            <label htmlFor=\"activityDetails\">\r\n              خلاصه فعالیت هاتون رو اینجا وارد کنید\r\n            </label>\r\n\r\n            <textarea\r\n              name=\"activityDetails\"\r\n              id=\"activityDetails\"\r\n              placeholder=\"خلاصه فعالیت...\"\r\n              onChange={onTextareaChange}\r\n              value={workDescription}\r\n            ></textarea>\r\n            <button onClick={SubmitExit.bind(null, { workDescription })}>\r\n              ثبت خروج از شرکت\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <label htmlFor=\"workType\">لطفا نوع کار خود را انتخاب کنید</label>\r\n            <select\r\n              onChange={onSelectChange}\r\n              id=\"workType\"\r\n              name=\"workType\"\r\n              value={workType}\r\n            >\r\n              <option>{WorkTypes.Remote}</option>\r\n              <option>{WorkTypes.InOffice}</option>\r\n            </select>\r\n\r\n            <button onClick={SubmitEntrance.bind(null, { workType })}>\r\n              ثبت ورود به شرکت\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {currentUser.activityLog.length > 0 && (\r\n          <>\r\n            <Link to=\"/details\">Details</Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  ) : (\r\n    <Redirect to=\"/authentication\" />\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\Projects\\code\\attendanceSystem\\src\\components\\forms\\authForm\\AuthForm.tsx",[],"D:\\Projects\\code\\attendanceSystem\\src\\pages\\detailsPage\\DetailsPage.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":23},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"@typescript-eslint/no-unused-vars","'EntranceShape' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]