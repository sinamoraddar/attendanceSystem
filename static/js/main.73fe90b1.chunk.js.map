{"version":3,"sources":["utils/types.ts","utils/contexts/AuthContext.ts","Router/PublicRoute.tsx","Router/PrivateRoute.tsx","components/header/Header.tsx","components/authForm/AuthForm.tsx","pages/authenticationPage/AuthenticationPage.tsx","pages/mainPage/MainPage.tsx","pages/reportsPage/ReportsPage.tsx","Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/reportsPage/ReportsPage.module.scss","pages/mainPage/MainPage.module.scss","App.module.scss","components/header/Header.module.scss","components/authForm/AuthForm.module.scss","pages/authenticationPage/AuthenticationPage.module.scss"],"names":["WeekDays","WorkTypes","InputTypes","AuthenticationConstants","Routes","initialCurrentUserState","name","phoneNumber","activityLog","AuthContext","createContext","isAuthenticated","currentUser","setIsAuthenticated","signUpTheUser","PublicRoute","children","Component","component","path","rest","useContext","render","props","to","pathname","Home","PrivateRoute","Authentication","Header","onExit","className","styles","header","Button","color","variant","button","onClick","AuthForm","type","useState","setName","setPhoneNumber","onSubmit","useCallback","e","preventDefault","SignUp","alert","onInputChange","label","value","target","Name","PhoneNumber","form","TextField","autoFocus","required","id","onChange","bind","AuthenticationPage","container","LogIn","MainPage","SubmitEntrance","SubmitExit","error","setError","InOffice","workType","setWorkType","workDescription","setWorkDescription","onSelectChange","onTextareaChange","useEffect","today","Date","getDay","Thursday","Friday","length","innerBox","hasEntered","exitTime","time","moment","entranceTime","format","htmlFor","placeholder","InputLabel","Select","labelId","select","MenuItem","Remote","ReportsPage","searchInput","setSearchInput","All","workTypeFilter","setWorkTypeFilter","currentWorkDuration","setCurrentWorkDuration","onSearchInputChange","getWorkDuration","duration","diff","hours","minutes","seconds","handleCurrentWorkDuration","basicInterval","setInterval","clearInterval","tableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","filter","includes","map","scope","red","orange","Router","setCurrentUser","dialogMessage","setDialogMessage","isConfirmationDialogVisible","setIsConfirmationDialogVisible","linkValue","setLinkValue","handleCancel","handleOk","localStorage","removeItem","AuthenticatedUser","setTimeout","clearTimeout","timeout","avatar","Avatar","slice","toUpperCase","exact","Reports","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","Link","icon","Dialog","aria-labelledby","open","DialogTitle","disableBackdropClick","disableEscapeKeyDown","maxWidth","DialogActions","App","submitEntrance","nanoid","hasExited","submitExit","now","lastTime","newActivityLog","activity","index","array","localUser","getItem","JSON","parse","setItem","stringify","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.73fe90b1.chunk.js","sourcesContent":["export enum WeekDays {\r\n  Sunday,\r\n  Monday,\r\n  Tuesday,\r\n  Wednesday,\r\n  Thursday,\r\n  Friday,\r\n  Saturday,\r\n}\r\n\r\nexport enum WorkTypes {\r\n  All = \"همه\",\r\n  InOffice = \"حضوری\",\r\n  Remote = \"ریموت\",\r\n}\r\nexport interface EntranceShape {\r\n  workType: WorkTypes;\r\n  workDescription: string;\r\n}\r\nexport interface UserShape {\r\n  name: string;\r\n  phoneNumber: string;\r\n\r\n  activityLog: {\r\n    id: string;\r\n    hasEntered: boolean;\r\n    hasExited: boolean;\r\n    entranceTime: Date | null;\r\n    exitTime: Date | null;\r\n    workType: WorkTypes | null;\r\n    workDescription: string;\r\n  }[];\r\n}\r\n\r\nexport enum InputTypes {\r\n  Name = \"نام\",\r\n  PhoneNumber = \"شماره تلفن\",\r\n}\r\nexport enum AuthenticationConstants {\r\n  AuthenticatedUser = \"AuthenticatedUser\",\r\n  SignUp = \"SignUp\",\r\n  LogIn = \"LogIn\",\r\n}\r\nexport type FormTypes =\r\n  | AuthenticationConstants.SignUp\r\n  | AuthenticationConstants.LogIn;\r\nexport interface FormInterface {\r\n  type: FormTypes;\r\n}\r\n\r\nexport enum Routes {\r\n  Home = \"/\",\r\n  Reports = \"/reports\",\r\n  Authentication = \"/authentication\",\r\n}\r\n","import { createContext } from \"react\";\r\nimport { UserShape } from \"utils/types\";\r\n\r\nexport const initialCurrentUserState: UserShape = {\r\n  name: \"\",\r\n  phoneNumber: \"\",\r\n  activityLog: [],\r\n};\r\n\r\ninterface AuthInterface {\r\n  isAuthenticated: boolean;\r\n  currentUser: UserShape;\r\n  setIsAuthenticated: any;\r\n  signUpTheUser: ({\r\n    name,\r\n    phoneNumber,\r\n  }: {\r\n    name: string;\r\n    phoneNumber: string;\r\n  }) => void;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthInterface>({\r\n  isAuthenticated: false,\r\n  currentUser: initialCurrentUserState,\r\n  setIsAuthenticated: () => {},\r\n  signUpTheUser: () => {},\r\n});\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport { RouteInterface } from \"./PrivateRoute\";\r\nimport { Routes } from \"utils/types\";\r\nconst PublicRoute = ({\r\n  children,\r\n  component: Component,\r\n  path,\r\n  ...rest\r\n}: RouteInterface) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      path={path}\r\n      render={(props) =>\r\n        !isAuthenticated ? (\r\n          children || <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: Routes.Home,\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PublicRoute;\r\n","import { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Routes } from \"utils/types\";\r\n\r\nexport interface RouteInterface {\r\n  children?: any;\r\n  component?: any;\r\n  path: any;\r\n  exact?: boolean;\r\n  render?: any;\r\n}\r\nconst PrivateRoute = ({\r\n  children,\r\n  component: Component,\r\n  ...rest\r\n}: RouteInterface) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          children || <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: Routes.Authentication,\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\n//third party components\r\nimport { Button } from \"@material-ui/core\";\r\n//utils\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\n//styles\r\nimport styles from \"./Header.module.scss\";\r\nconst Header = ({ onExit }: { onExit: () => any }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <header className={styles.header}>\r\n      <h1>سامانه حضور و غیاب</h1>\r\n\r\n      {currentUser.name !== \"\" ? (\r\n        <>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            className={styles.button}\r\n            onClick={onExit}\r\n          >\r\n            خروج از سیستم\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\n//third party components\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\n//contexts\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport {\r\n  AuthenticationConstants,\r\n  FormInterface,\r\n  InputTypes,\r\n} from \"utils/types\";\r\n//styles\r\nimport styles from \"./AuthForm.module.scss\";\r\n\r\n//component\r\nconst AuthForm = ({ type }: FormInterface) => {\r\n  //context\r\n  const {\r\n    currentUser,\r\n    setIsAuthenticated,\r\n    isAuthenticated,\r\n    signUpTheUser,\r\n  } = useContext(AuthContext);\r\n  //state\r\n  const [name, setName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  //event handlers\r\n  const onSubmit = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (type === AuthenticationConstants.SignUp) {\r\n        signUpTheUser({ name, phoneNumber });\r\n      } else {\r\n        if (phoneNumber === currentUser.phoneNumber) {\r\n          setIsAuthenticated(true);\r\n        } else {\r\n          alert(\"اطلاعات نا معتبر است\");\r\n        }\r\n      }\r\n    },\r\n    [name, phoneNumber, setIsAuthenticated, currentUser, type, signUpTheUser]\r\n  );\r\n\r\n  const onInputChange = useCallback((label, e: any) => {\r\n    const { value } = e.target;\r\n    switch (label) {\r\n      case InputTypes.Name: {\r\n        setName(value);\r\n        break;\r\n      }\r\n      case InputTypes.PhoneNumber: {\r\n        setPhoneNumber(value);\r\n        break;\r\n      }\r\n      default: {\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className={styles.form}>\r\n        {type === AuthenticationConstants.SignUp ? (\r\n          <>\r\n            <h2>ثبت نام</h2>\r\n            <TextField\r\n              autoFocus\r\n              required\r\n              id=\"standard-required\"\r\n              label={InputTypes.Name}\r\n              value={name}\r\n              onChange={onInputChange.bind(null, InputTypes.Name)}\r\n              type=\"text\"\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label={InputTypes.PhoneNumber}\r\n              type=\"number\"\r\n              value={phoneNumber}\r\n              onChange={onInputChange.bind(null, InputTypes.PhoneNumber)}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>ورود</h2>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label={InputTypes.PhoneNumber}\r\n              type=\"number\"\r\n              value={phoneNumber}\r\n              autoFocus\r\n              onChange={onInputChange.bind(null, InputTypes.PhoneNumber)}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n          {type}\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useContext } from \"react\";\r\n//third party components\r\nimport { Redirect } from \"react-router-dom\";\r\n//components\r\nimport AuthForm from \"components/authForm/AuthForm\";\r\n//styles\r\nimport styles from \"./AuthenticationPage.module.scss\";\r\n//utils\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport { AuthenticationConstants } from \"utils/types\";\r\n\r\nconst AuthenticationPage = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <div className={styles.container}>\r\n      <AuthForm\r\n        type={\r\n          currentUser.name === \"\"\r\n            ? AuthenticationConstants.SignUp\r\n            : AuthenticationConstants.LogIn\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticationPage;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\n//third party components\r\nimport moment from \"moment\";\r\nimport { Button, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n//utils\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport { WeekDays, WorkTypes } from \"utils/types\";\r\n//styles\r\nimport styles from \"./MainPage.module.scss\";\r\n\r\nconst MainPage = ({\r\n  SubmitEntrance,\r\n  SubmitExit,\r\n}: {\r\n  SubmitEntrance: ({ workType }: { workType: WorkTypes }) => void;\r\n  SubmitExit: ({ workDescription }: { workDescription: string }) => void;\r\n}) => {\r\n  //context\r\n  const { currentUser } = useContext(AuthContext);\r\n  //state\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [workType, setWorkType] = useState<WorkTypes>(WorkTypes.InOffice);\r\n  const [workDescription, setWorkDescription] = useState<string>(\"\");\r\n\r\n  //callbacks\r\n  const onSelectChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setWorkType(value);\r\n  }, []);\r\n  const onTextareaChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setWorkDescription(value);\r\n  }, []);\r\n  useEffect(() => {\r\n    const today = new Date().getDay();\r\n    if (today === WeekDays.Thursday || today === WeekDays.Friday) {\r\n      setError(\"ثبت ورود و خروج در روز های تعطیل امکان پذیر نیست\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className={styles.container}>\r\n      {error.length > 0 ? (\r\n        <h3>{error}</h3>\r\n      ) : (\r\n        <div className={styles.innerBox}>\r\n          {currentUser.activityLog.length > 0 &&\r\n          currentUser.activityLog[currentUser.activityLog.length - 1]\r\n            .hasEntered &&\r\n          currentUser.activityLog[currentUser.activityLog.length - 1]\r\n            .exitTime === null ? (\r\n            <>\r\n              <h3>\r\n                شما در\r\n                <span className={styles.time}>\r\n                  {moment(\r\n                    currentUser.activityLog[currentUser.activityLog.length - 1]\r\n                      .entranceTime\r\n                  ).format(\"HH:mm:ss\")}\r\n                </span>\r\n                وارد شرکت شدید\r\n              </h3>\r\n              <label htmlFor=\"activityDetails\">\r\n                خلاصه فعالیت هاتون رو اینجا وارد کنید\r\n              </label>\r\n\r\n              <textarea\r\n                name=\"activityDetails\"\r\n                id=\"activityDetails\"\r\n                placeholder=\"خلاصه فعالیت ها...\"\r\n                onChange={onTextareaChange}\r\n                value={workDescription}\r\n              ></textarea>\r\n              <Button\r\n                variant={\"contained\"}\r\n                color=\"secondary\"\r\n                onClick={SubmitExit.bind(null, { workDescription })}\r\n              >\r\n                ثبت خروج از شرکت\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <InputLabel id=\"demo-simple-select-helper-label\">\r\n                لطفا نوع کار خود را انتخاب کنید\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-helper-label\"\r\n                id=\"demo-simple-select-helper\"\r\n                value={workType}\r\n                onChange={onSelectChange}\r\n                name=\"workType\"\r\n                className={styles.select}\r\n              >\r\n                <MenuItem value={WorkTypes.Remote}>{WorkTypes.Remote}</MenuItem>\r\n                <MenuItem value={WorkTypes.InOffice}>\r\n                  {WorkTypes.InOffice}\r\n                </MenuItem>\r\n              </Select>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={SubmitEntrance.bind(null, { workType })}\r\n              >\r\n                ثبت ورود به شرکت\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\n//third party components\r\nimport moment from \"moment\";\r\nimport {\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  InputLabel,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n//utils\r\nimport { AuthContext } from \"utils/contexts/AuthContext\";\r\nimport { WorkTypes } from \"utils/types\";\r\n//styles\r\nimport styles from \"./ReportsPage.module.scss\";\r\n//component\r\nconst ReportsPage = () => {\r\n  //context\r\n  const {\r\n    currentUser: { activityLog },\r\n  } = useContext(AuthContext);\r\n  //state\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const [workTypeFilter, setWorkTypeFilter] = useState<WorkTypes>(\r\n    WorkTypes.All\r\n  );\r\n  const [currentWorkDuration, setCurrentWorkDuration] = useState<string>(\"\");\r\n  //callbacks\r\n  const onSearchInputChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setSearchInput(value);\r\n  }, []);\r\n  const onSelectChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setWorkTypeFilter(value);\r\n  }, []);\r\n  const getWorkDuration = useCallback(({ exitTime, entranceTime }) => {\r\n    return `\r\n          ${moment\r\n            .duration(\r\n              moment(exitTime === null ? new Date() : exitTime).diff(\r\n                moment(entranceTime)\r\n              )\r\n            )\r\n            .hours()}\r\n          ساعت\r\n          ${moment\r\n            .duration(\r\n              moment(exitTime === null ? new Date() : exitTime).diff(\r\n                moment(entranceTime)\r\n              )\r\n            )\r\n            .minutes()}\r\n          دقیقه\r\n          ${moment\r\n            .duration(\r\n              moment(exitTime === null ? new Date() : exitTime).diff(\r\n                moment(entranceTime)\r\n              )\r\n            )\r\n            .seconds()}\r\n          ثانیه\r\n   `;\r\n  }, []);\r\n  const handleCurrentWorkDuration = useCallback(() => {\r\n    if (activityLog.length > 0) {\r\n      const currentWorkDuration = getWorkDuration({\r\n        exitTime: new Date(),\r\n        entranceTime: activityLog[activityLog.length - 1].entranceTime,\r\n      });\r\n      setCurrentWorkDuration(currentWorkDuration);\r\n    }\r\n  }, [activityLog, getWorkDuration]);\r\n  //life cycle hooks\r\n  useEffect(() => {\r\n    //handle the initial amount of duration\r\n    handleCurrentWorkDuration();\r\n    //set up the timer\r\n    const basicInterval = setInterval(handleCurrentWorkDuration, 1000);\r\n    return () => clearInterval(basicInterval);\r\n  }, [activityLog, handleCurrentWorkDuration]);\r\n  //render\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.innerBox}>\r\n        <div className={styles.header}>\r\n          <TextField\r\n            label=\"جستجو در میان فعالیت ها\"\r\n            value={searchInput}\r\n            onChange={onSearchInputChange}\r\n            type=\"text\"\r\n          />\r\n          <div>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">\r\n              لطفا نوع کار خود را انتخاب کنید\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              value={workTypeFilter}\r\n              onChange={onSelectChange}\r\n              name=\"workType\"\r\n              className={styles.select}\r\n            >\r\n              <MenuItem value={WorkTypes.All}>{WorkTypes.All}</MenuItem>\r\n              <MenuItem value={WorkTypes.Remote}>{WorkTypes.Remote}</MenuItem>\r\n              <MenuItem value={WorkTypes.InOffice}>\r\n                {WorkTypes.InOffice}\r\n              </MenuItem>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        {activityLog.length > 0 ? (\r\n          <div className={styles.tableContainer}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>نوع</TableCell>\r\n                  <TableCell align=\"right\">زمان ورود</TableCell>\r\n                  <TableCell align=\"right\">زمان خروج</TableCell>\r\n                  <TableCell align=\"right\">مدت زمان کارکرد</TableCell>\r\n                  <TableCell align=\"right\">شرح فعالیت ها</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {activityLog\r\n                  .filter(\r\n                    ({ workDescription, workType }) =>\r\n                      workDescription?.includes(searchInput) &&\r\n                      (workTypeFilter === WorkTypes.All ||\r\n                        workType === workTypeFilter)\r\n                  )\r\n                  .map(\r\n                    ({\r\n                      workType,\r\n                      entranceTime,\r\n                      exitTime,\r\n                      id,\r\n                      workDescription,\r\n                    }) => (\r\n                      <TableRow key={id}>\r\n                        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                          {workType}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {moment(entranceTime).format(\r\n                            \"MMMM Do YYYY, HH:mm:ss\"\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {exitTime !== null ? (\r\n                            moment(exitTime).format(\"MMMM Do YYYY, HH:mm:ss\")\r\n                          ) : (\r\n                            <span className={styles.red}>\r\n                              هنوز خارج نشده اید\r\n                            </span>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {exitTime !== null ? (\r\n                            getWorkDuration({ exitTime, entranceTime })\r\n                          ) : (\r\n                            <span className={styles.orange}>\r\n                              {currentWorkDuration}\r\n                            </span>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{workDescription}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  )}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        ) : (\r\n          <p>فعالیتی وجود ندارد</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsPage;\r\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\r\n//third party components\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { BrowserRouter, Switch, Link, Redirect } from \"react-router-dom\";\r\n//components\r\nimport PublicRoute from \"Router/PublicRoute\";\r\nimport PrivateRoute from \"Router/PrivateRoute\";\r\nimport Header from \"components/header/Header\";\r\n//pages\r\nimport AuthenticationPage from \"pages/authenticationPage/AuthenticationPage\";\r\nimport MainPage from \"pages/mainPage/MainPage\";\r\nimport ReportsPage from \"pages/reportsPage/ReportsPage\";\r\n//utils\r\nimport {\r\n  AuthContext,\r\n  initialCurrentUserState,\r\n} from \"utils/contexts/AuthContext\";\r\nimport { AuthenticationConstants, Routes } from \"utils/types\";\r\n//styles\r\nimport styles from \"App.module.scss\";\r\n\r\n//component\r\nconst Router = ({\r\n  SubmitEntrance,\r\n  SubmitExit,\r\n  setCurrentUser,\r\n  dialogMessage,\r\n  setDialogMessage,\r\n}: {\r\n  SubmitEntrance: any;\r\n  SubmitExit: any;\r\n  setCurrentUser: any;\r\n  dialogMessage: any;\r\n  setDialogMessage: any;\r\n}) => {\r\n  //context\r\n  const { isAuthenticated, currentUser, setIsAuthenticated } = useContext(\r\n    AuthContext\r\n  );\r\n  //state\r\n  const [\r\n    isConfirmationDialogVisible,\r\n    setIsConfirmationDialogVisible,\r\n  ] = useState<boolean>(false);\r\n  const [linkValue, setLinkValue] = useState(0);\r\n\r\n  //callbacks\r\n  const handleCancel = useCallback(() => {\r\n    setIsConfirmationDialogVisible(false);\r\n  }, []);\r\n  const handleOk = useCallback(() => {\r\n    setIsConfirmationDialogVisible(false);\r\n    localStorage.removeItem(AuthenticationConstants.AuthenticatedUser);\r\n    setCurrentUser(initialCurrentUserState);\r\n    setIsAuthenticated(false);\r\n  }, [setCurrentUser, setIsAuthenticated]);\r\n  const onExit = useCallback(() => {\r\n    setIsConfirmationDialogVisible(true);\r\n  }, []);\r\n  //life cycle hooks\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      setDialogMessage(\"شما با موفقیت وارد شدید\");\r\n    }\r\n  }, [isAuthenticated, setDialogMessage]);\r\n  useEffect(() => {\r\n    //handle dialog visibility\r\n    let timeout: NodeJS.Timeout;\r\n    if (dialogMessage) {\r\n      setTimeout(() => {\r\n        setDialogMessage(\"\");\r\n      }, 1000);\r\n    }\r\n    return () => clearTimeout(timeout);\r\n  }, [dialogMessage, setDialogMessage]);\r\n  return (\r\n    <BrowserRouter>\r\n      <Header {...{ onExit }} />\r\n      {currentUser.name !== \"\" && (\r\n        <div className={styles.avatar}>\r\n          <div>\r\n            <span>{currentUser.name}</span>\r\n            <Avatar>{currentUser.name.slice(0, 1).toUpperCase()}</Avatar>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Switch>\r\n        <PrivateRoute path={Routes.Home} exact>\r\n          <MainPage {...{ SubmitEntrance, SubmitExit }} />\r\n        </PrivateRoute>\r\n        <PrivateRoute path={Routes.Reports} exact component={ReportsPage} />\r\n        <PublicRoute\r\n          path={Routes.Authentication}\r\n          exact\r\n          component={AuthenticationPage}\r\n        />\r\n        {/* If no match is found redirect to the home page */}\r\n        <Redirect to={Routes.Home} />\r\n      </Switch>\r\n      {isAuthenticated && (\r\n        <BottomNavigation\r\n          value={linkValue}\r\n          onChange={(event, newValue) => {\r\n            setLinkValue(newValue);\r\n          }}\r\n          showLabels\r\n        >\r\n          <BottomNavigationAction\r\n            component={Link}\r\n            to={Routes.Home}\r\n            label=\"خانه\"\r\n            icon={<HomeIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"لیست گزارش ها\"\r\n            component={Link}\r\n            to={Routes.Reports}\r\n            icon={<ListAltIcon />}\r\n          ></BottomNavigationAction>\r\n        </BottomNavigation>\r\n      )}\r\n\r\n      <Dialog aria-labelledby=\"simple-dialog-title\" open={dialogMessage !== \"\"}>\r\n        <DialogTitle id=\"simple-dialog-title\">{dialogMessage}</DialogTitle>\r\n      </Dialog>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"md\"\r\n        aria-labelledby=\"confirmation-dialog-title\"\r\n        open={isConfirmationDialogVisible}\r\n      >\r\n        <DialogTitle id=\"confirmation-dialog-title\">\r\n          در صورت خروج تمام اطلاعات شما پاک خواهد شد . آیا مطمئن هستید؟\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n            خیر\r\n          </Button>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            بله\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\n//third party components\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\n//utils\nimport {\n  AuthContext,\n  initialCurrentUserState,\n} from \"utils/contexts/AuthContext\";\nimport { UserShape, WorkTypes, AuthenticationConstants } from \"utils/types\";\n//styles\nimport \"./App.module.scss\";\nimport Router from \"Router/Router\";\n\nfunction App() {\n  //state\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<UserShape>(\n    initialCurrentUserState\n  );\n  const [dialogMessage, setDialogMessage] = useState<string>(\"\");\n\n  //callbacks\n  const signUpTheUser = useCallback(\n    ({ name, phoneNumber }: { name: string; phoneNumber: string }) => {\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        name,\n        phoneNumber,\n      }));\n      setIsAuthenticated(true);\n    },\n    []\n  );\n  const submitEntrance = useCallback(\n    ({ workType }: { workType: WorkTypes }) => {\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        activityLog: [\n          ...currentUser.activityLog,\n          {\n            id: nanoid(),\n            hasEntered: true,\n            hasExited: false,\n            entranceTime: new Date(),\n            exitTime: null,\n            workType,\n            workDescription: \"\",\n          },\n        ],\n      }));\n    },\n    []\n  );\n  const submitExit = useCallback(\n    ({ workDescription }: { workDescription: string }) => {\n      if (currentUser.activityLog.length > 0) {\n        const now = moment();\n        const lastTime = moment(\n          currentUser.activityLog[currentUser.activityLog.length - 1]\n            .entranceTime\n        );\n        //let the user exit if it's been more than 10 minutes since their last entrance\n        if (now.diff(lastTime, \"minute\") > 10) {\n          setCurrentUser((currentUser) => {\n            const newActivityLog = currentUser.activityLog.map(\n              (activity, index, array) => {\n                return index === array.length - 1\n                  ? {\n                      ...activity,\n                      hasExited: true,\n                      exitTime: new Date(),\n                      workDescription,\n                    }\n                  : activity;\n              }\n            );\n            return {\n              ...currentUser,\n              activityLog: newActivityLog,\n            };\n          });\n        } else {\n          setDialogMessage(\n            \"خطا!برای ثبت خروج باید از آخرین ورود شما بیش از 10 دقیقه گذشته باشد\"\n          );\n        }\n      }\n    },\n    [currentUser]\n  );\n  //life cycle hooks\n  //get the current user from local storage on the initial render\n  useEffect(() => {\n    let localUser = localStorage.getItem(\n      AuthenticationConstants.AuthenticatedUser\n    );\n    if (localUser !== null) {\n      setCurrentUser(JSON.parse(localUser));\n    }\n  }, []);\n  useEffect(() => {\n    if (currentUser.name !== \"\") {\n      localStorage.setItem(\n        AuthenticationConstants.AuthenticatedUser,\n        JSON.stringify(currentUser)\n      );\n    }\n  }, [currentUser]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        currentUser,\n        setIsAuthenticated,\n        signUpTheUser,\n      }}\n    >\n      <Router\n        {...{\n          SubmitEntrance: submitEntrance,\n          SubmitExit: submitExit,\n          setCurrentUser,\n          dialogMessage,\n          setDialogMessage,\n        }}\n      />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"assets/styles/sass/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReportsPage_root__29JoB\",\"container\":\"ReportsPage_container__2Oq-D\",\"header\":\"ReportsPage_header__1VkpH\",\"innerBox\":\"ReportsPage_innerBox__2FIRC\",\"select\":\"ReportsPage_select__2_3QJ\",\"tableContainer\":\"ReportsPage_tableContainer__SBrpz\",\"red\":\"ReportsPage_red__3Jti_\",\"orange\":\"ReportsPage_orange__1C1uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainPage_root__yAt6B\",\"container\":\"MainPage_container__3RnYP\",\"innerBox\":\"MainPage_innerBox__h8TRZ\",\"select\":\"MainPage_select__2tpws\",\"button\":\"MainPage_button__3AjZ-\",\"time\":\"MainPage_time__1NhK4\",\"bottomNavigation\":\"MainPage_bottomNavigation__2bThF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__q_3Rb\",\"button\":\"App_button__3e7IS\",\"avatar\":\"App_avatar__FNADU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3EG4e\",\"header\":\"Header_header__3xDoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AuthForm_root__1E3pV\",\"form\":\"AuthForm_form__3za7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AuthenticationPage_root__17uym\",\"container\":\"AuthenticationPage_container__WLNyi\"};"],"sourceRoot":""}